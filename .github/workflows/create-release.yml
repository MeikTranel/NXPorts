name: Create a new release

on:
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  ContinuousIntegrationBuild: true
  BuildType: tagged

jobs:
  create-release-and-archive-changes:
    name: Create Release & Archive CHANGES.md
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup Dotnet for use with actions
      uses: actions/setup-dotnet@v1

    - name: Set version env variable
      run: dotnet build src/NXPorts/NXPorts.csproj -t:ExportVersionAsGHWorkflowEnvVariable

    - name: Create Release
      uses: ncipollo/release-action@v1.8.10
      with:
        tag: v${{ env.GITHUB_NXPORTS_VERSION }}
        bodyFile: CHANGES.md
        draft: true

    - name: Prepend changelog
      shell: pwsh
      run: |
        Set-Content .\docs\CHANGELOG.md @( "## Changes in v${{ env.GITHUB_NXPORTS_VERSION }}", "",(Get-Content .\CHANGES.md | Select-Object -Skip 2), "", (Get-Content .\docs\CHANGELOG.md) )
        Set-Content .\CHANGES.md @("# Changes since v${{ env.GITHUB_NXPORTS_VERSION }}")

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3.10.1
      with:
        branch: automated/changesMD-reset-after-v${{ env.GITHUB_NXPORTS_VERSION }}-${{ github.run_id }}
        labels: bot
        title: v${{ env.GITHUB_NXPORTS_VERSION }} post-release chores
        committer: github-actions <github-actions@github.com>
        commit-message: Archive & reset CHANGES.md after the release of v${{ env.GITHUB_NXPORTS_VERSION }}

